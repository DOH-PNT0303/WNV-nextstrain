configfile: "config/defaults.yaml"


#send_slack_notifications = config.get("send_slack_notifications", False)

serotypes = ["all"]


def _get_all_targets(wildcards):
    # Default targets are the metadata TSV and sequences FASTA files
    all_targets = expand(
        ["data/sequences_{serotype}.fasta.zst", "data/metadata_{serotype}.tsv.zst"],
        serotype=serotypes,
    )

#    upload_config = config.get("upload", {})
#
#        files_to_upload = params.get("files_to_upload", [])
#            )
#            all_targets.extend(
#                    [
#                        f"data/upload/{target}/{{file_to_upload}}-to-{{remote_file_name}}.done"
#                    ],
#                    file_to_upload=files_to_upload,
#                    remote_file_name=remote_file_names,
#                )
#            )

    # Add additional targets for Nextstrain's internal Slack notifications
#    if send_slack_notifications:
#        all_targets.extend(
#            [
#                "data/notify/genbank-record-change.done",
#                "data/notify/metadata-diff.done",
#            ]
#        )

#    if config.get("trigger_rebuild"):
#        all_targets.append("data/trigger/rebuild.done")

    return all_targets


rule all:
    input:
        _get_all_targets,


include: "rules/fetch_sequences.smk"
include: "rules/curate.smk"


#if config.get("upload"):

#    include: "rules/upload.smk"


#if send_slack_notifications:

#    include: "rules/slack_notifications.smk"


#if config.get("trigger_rebuild"):

#    include: "rules/trigger_rebuild.smk"


if "custom_rules" in config:
    for rule_file in config["custom_rules"]:

        include: rule_file
